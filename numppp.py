#!/usr/bin/python
# -*- coding:UTF-8 -*-

'''
本程序用来测试利用python计算方差(variance),标准差(standard variance)，以及协方差(covariance)
'''

import numpy as np

arr=np.array([100,120,140]) #一维向量
variance=np.var(arr)    #var可以直接用来求一维向量的方差。(随机变量的方差)

standard=np.std(arr)    #std可以用来求标准差。(随机变量的标准差)

standard1=np.std(arr,ddof=1) #处以n-1,无偏估计
print (standard)
print (standard1)

s=[100,120,140]
t=[50,60,70]
y=[s,t]
covy=np.cov(y)  # (样本的协方差)
#得到矩阵 400 200  #其中，200是s和t的协方差，公式 cov(𝑋,𝑌)=E[(𝑋−E[𝑋])(𝑌−E[𝑌])]=E[(20+0+20)(10+0+10)]=E(200+0+200)=400/2=200
#         200 100  #400是s和s的协方差，等于方差。 (20**2+0+20**2)/2=400

e=[2,4,6]
z=[s,t,e]
covz=np.cov(z) # a11 a12 a13
               # a21 a22 a23
               # a31 a32 a33
               
X = [11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]
Y = [12,15,17,21,22,21,18,23,26,25,22,28,24,28,30,33,28,34,36,35]               
Z=[X,Y]
covZ=np.cov(Z)
print(covZ)    #整体上来看，随着x的增长，y增长，所以xy正相关，协方差为37.3684


x1=[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]
y1= [35,35,29,29,28,28,27,26,26,23,21,22,25,19,16,19,20,16,15,16]            
z1=[x1,y1]
covz1=np.cov(z1)
print (covz1)   #整体上看，随着x的增长，y下降，所以xy负相关，协方差为-34.0789


x2=[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]
y2= [16,16,28,17,20,26,20,17,21,15,12,29,24,25,16,15,21,13,17,25]           
z2=[x2,y2]
covz2=np.cov(z2)
print (covz2)   #整体上来看，随着x的增长，y没有与之对应的关系，两者互不相关，协方差为-1.0263

         

x3=[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]
y3=[12,12,13,15,16,16,17,19,21,22,22,23,23,26,25,28,29,29,31,32]
#y3=[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]
z3=[x3,y3]
covz3=np.cov(z3)
stdx=np.std(x3,ddof=1)
stdy=np.std(y3,ddof=1)
coe=covz3/(stdx*stdy)   #相关系数等于0.9939，相关性非常强。如果换成被注释掉的y3,则相关性是1
coe1=np.corrcoef(x3,y3) #直接用numpy自带的函数计算相关系数也是0.9939
print ("coe==",coe)
print ("coe1==",coe1)

#print (variance)
#print (standard)
#print (covy)
#print (covz)
